name: Python virtualenv
description: Set up a Python conda virtual environment with caching
inputs:
  python-version:
    description: The Python version to use
    required: true
  cache-prefix:
    description: Update this to invalidate the cache
    required: true
    default: v0

runs:
  using: composite
  steps:

    - shell: bash -l {0}
      run: |
        # Get the exact Python version to use in the cache key.
        echo "PYTHON_VERSION=$(python --version)" >> $GITHUB_ENV

    - name: Cache conda packages
      uses: actions/cache@v4
      id: conda-cache
      with:
        path: ~/conda_pkgs_dir
        key: ${{ inputs.cache-prefix }}-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('pyproject.toml') }}

    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@v3
      with:
        activate-environment: anaconda-client-env
        miniconda-version: "latest"
        channels: conda-forge, defaults
        use-only-tar-bz2: true  # IMPORTANT: This needs to be set for caching to work properly!
        auto-update-conda: true
        python-version: ${{ inputs.python-version }}

    - name: Install dependencies with unidep
      shell: bash -l {0}
      run: |
        pip install --upgrade pip unidep
        conda info
        conda list
        unidep install-all --skip-local
      if: steps.conda-cache.outputs.cache-hit != 'true'
    
    - shell: bash -l {0}
      run: |
        conda info
        conda list